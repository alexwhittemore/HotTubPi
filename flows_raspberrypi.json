[
    {
        "id": "b283f038.b3cfc",
        "type": "tab",
        "label": "Hot tub",
        "disabled": false,
        "info": ""
    },
    {
        "id": "898e8f9a.f49db",
        "type": "subflow",
        "name": "Temp Error Detection",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "394def51.e6d93"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 40,
                "wires": [
                    {
                        "id": "394def51.e6d93",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 100,
                "wires": [
                    {
                        "id": "394def51.e6d93",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Upper Limit",
                "type": "num",
                "value": "170"
            },
            {
                "name": "Lower Limit",
                "type": "num",
                "value": "33"
            }
        ]
    },
    {
        "id": "5c2d8da3.0f1534",
        "type": "subflow",
        "name": "Log Temp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 180,
                "wires": [
                    {
                        "id": "21b14290.b907ae"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "Filename",
                "type": "str",
                "value": "/home/pi/tubtemp.txt"
            }
        ]
    },
    {
        "id": "63b82050.c1a16",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "d259de13.57a86",
        "type": "mqtt-broker",
        "name": "AdafruitIO",
        "broker": "io.adafruit.com",
        "port": "8883",
        "tls": "63b82050.c1a16",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b91905fa.f52fe8",
        "type": "ui_group",
        "name": "UI Group 1",
        "tab": "165a3bcd.750224",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8e49580a.2ff848",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2c9b1c26.c94c44",
        "type": "ui_group",
        "name": "UI Group 2",
        "tab": "8198ab8.45d3e58",
        "order": 2,
        "disp": false,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "165a3bcd.750224",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8198ab8.45d3e58",
        "type": "ui_tab",
        "name": "Gauges",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "168dff91.54ffd",
        "type": "ui_spacer",
        "z": "b283f038.b3cfc",
        "name": "spacer",
        "group": "2c9b1c26.c94c44",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "61df3a55.8ed3c4",
        "type": "ui_spacer",
        "z": "b283f038.b3cfc",
        "name": "spacer",
        "group": "2c9b1c26.c94c44",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "690817b6.f82858",
        "type": "ui_spacer",
        "z": "b283f038.b3cfc",
        "name": "spacer",
        "group": "b91905fa.f52fe8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "64be82f8.0a27d4",
        "type": "ui_spacer",
        "z": "b283f038.b3cfc",
        "name": "spacer",
        "group": "b91905fa.f52fe8",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d9ecdcdae1f3406",
        "type": "mqtt-broker",
        "name": "Home Assistant",
        "broker": "hass.home",
        "port": "1883",
        "clientid": "hottub1",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "394def51.e6d93",
        "type": "switch",
        "z": "898e8f9a.f49db",
        "name": "Range Check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "Lower Limit",
                "vt": "env",
                "v2": "Upper Limit",
                "v2t": "env"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "21b14290.b907ae",
        "type": "function",
        "z": "5c2d8da3.0f1534",
        "name": "date, time, temp",
        "func": "//var time = new Date().toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"})\n\n// Parse our locale string to [date, time]\nvar date = new Date().toLocaleString('en-US',{hour12:false,timeZone: \"America/Los_Angeles\"}).split(\" \");\n\n// Now we can access our time at date[1], and monthdayyear @ date[0]\nvar time = date[1];\nvar mdy = date[0];\n\nvar temp = msg.payload;\n\nvar newmsg = {payload: (mdy + time + \",\" + temp)};\nreturn newmsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "4adc0e16.74db9"
            ]
        ]
    },
    {
        "id": "4adc0e16.74db9",
        "type": "file",
        "z": "5c2d8da3.0f1534",
        "name": "",
        "filename": "/home/pi/tubtemp.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 600,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "917c3c51.4a074",
        "type": "rpi-ds18b20",
        "z": "b283f038.b3cfc",
        "topic": "",
        "array": false,
        "name": "",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "06a061e906895715",
                "a1fd6681fd0025d0"
            ]
        ]
    },
    {
        "id": "6e1c0d3a.921594",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "5s",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "917c3c51.4a074",
                "ddccd0ae.6687",
                "b4761a8dd5b19f8b"
            ]
        ]
    },
    {
        "id": "828adcbd.2b77a",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Water Temp",
        "property": "file",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "28-0116004533ff",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "5cca1c15.679c54"
            ]
        ]
    },
    {
        "id": "ef7e2c7d.0c9b7",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "C to F",
        "func": "tempc = msg.payload;\ntempf = tempc*1.8+32;\n// round to xxx.xx\ntempf = Math.round(tempf*100)/100;\nmsg.payload = tempf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 110,
        "y": 440,
        "wires": [
            [
                "ed1fdeca.8f225"
            ]
        ]
    },
    {
        "id": "4cb27032.ffee9",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Enclosure Temp",
        "property": "file",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "28-000003601c2b",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 640,
        "wires": [
            [
                "cd9fd21a.b88ea"
            ]
        ]
    },
    {
        "id": "e756d972.8e5858",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Far Air Temp",
        "property": "file",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "28-000003605249",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 800,
        "wires": [
            [
                "dc2da04f.a919f"
            ]
        ]
    },
    {
        "id": "53ef0eb4.25e3",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Close Air Temp",
        "property": "file",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "28-011600430bff",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 960,
        "wires": [
            [
                "6d1b7497.f72fac"
            ]
        ]
    },
    {
        "id": "4058ec7c.ede654",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "c2779a44.58e5e8",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 840,
        "wires": []
    },
    {
        "id": "fce5f2fd.98a5d",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ae53367.1ad2ec8",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "alexwhittemore/feeds/hot-tub-water-node-red",
        "qos": "",
        "retain": "",
        "broker": "d259de13.57a86",
        "x": 1540,
        "y": 440,
        "wires": []
    },
    {
        "id": "5cca1c15.679c54",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "clean msg",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "file",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "dir",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "family",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "waterTemp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cd9fd21a.b88ea",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "clean msg",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "file",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "dir",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "family",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 640,
        "wires": [
            [
                "4058ec7c.ede654",
                "986fafff.9edcc",
                "93de8455.217c68"
            ]
        ]
    },
    {
        "id": "dc2da04f.a919f",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "clean msg",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "file",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "dir",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "family",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 800,
        "wires": [
            [
                "c2779a44.58e5e8",
                "355fbb23.93bfc4",
                "c18cb083.9e303"
            ]
        ]
    },
    {
        "id": "6d1b7497.f72fac",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "clean msg",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "file",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "dir",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "family",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 960,
        "wires": [
            [
                "fce5f2fd.98a5d",
                "d61acef6.7efea",
                "af64db8.0a94d28"
            ]
        ]
    },
    {
        "id": "70d646ff.536a38",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "alexwhittemore/feeds/hot-tub-node-red-enclosure-temp",
        "qos": "",
        "retain": "",
        "broker": "d259de13.57a86",
        "x": 990,
        "y": 640,
        "wires": []
    },
    {
        "id": "5e46c716.01ddd8",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "alexwhittemore/feeds/hot-tub-node-red-far-temp",
        "qos": "",
        "retain": "",
        "broker": "d259de13.57a86",
        "x": 970,
        "y": 800,
        "wires": []
    },
    {
        "id": "e79f5a3d.f5aa98",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "alexwhittemore/feeds/hot-tub-air-node-red",
        "qos": "",
        "retain": "",
        "broker": "d259de13.57a86",
        "x": 950,
        "y": 960,
        "wires": []
    },
    {
        "id": "ade04ba4.cfccb8",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/Min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 1190,
        "y": 440,
        "wires": [
            [
                "ae53367.1ad2ec8",
                "90d698ac6cf527ed"
            ]
        ]
    },
    {
        "id": "986fafff.9edcc",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/Min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 690,
        "y": 640,
        "wires": [
            [
                "70d646ff.536a38"
            ]
        ]
    },
    {
        "id": "355fbb23.93bfc4",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/Min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 690,
        "y": 800,
        "wires": [
            [
                "5e46c716.01ddd8"
            ]
        ]
    },
    {
        "id": "d61acef6.7efea",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/Min",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 690,
        "y": 960,
        "wires": [
            [
                "e79f5a3d.f5aa98"
            ]
        ]
    },
    {
        "id": "4de81ef2.33a3e",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "Water Temp Gauge",
        "group": "2c9b1c26.c94c44",
        "order": 1,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Water Temp",
        "label": "°F",
        "format": "{{value}}",
        "min": "70",
        "max": "105",
        "colors": [
            "#4d36b9",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "90",
        "seg2": "101",
        "className": "",
        "x": 2590,
        "y": 660,
        "wires": []
    },
    {
        "id": "93de8455.217c68",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "Enclosure Temp Gauge",
        "group": "2c9b1c26.c94c44",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Enclosure Temp",
        "label": "°F",
        "format": "{{value}}",
        "min": "50",
        "max": "150",
        "colors": [
            "#4d36b9",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "100",
        "seg2": "110",
        "x": 750,
        "y": 720,
        "wires": []
    },
    {
        "id": "c18cb083.9e303",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "Remote Air Temp Gauge",
        "group": "2c9b1c26.c94c44",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Remote Air Temp",
        "label": "°F",
        "format": "{{value}}",
        "min": "50",
        "max": "105",
        "colors": [
            "#4d36b9",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "80",
        "seg2": "90",
        "x": 750,
        "y": 880,
        "wires": []
    },
    {
        "id": "af64db8.0a94d28",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "Close Air Temp Gauge",
        "group": "2c9b1c26.c94c44",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Close Air Temp",
        "label": "°F",
        "format": "{{value}}",
        "min": "50",
        "max": "105",
        "colors": [
            "#4d36b9",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "80",
        "seg2": "90",
        "x": 740,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1433cc39.acc8c4",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "currentTemp",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "currentTemp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "af64af8f.3ea97",
                "7045e78a.90c438"
            ]
        ]
    },
    {
        "id": "ddccd0ae.6687",
        "type": "exec",
        "z": "b283f038.b3cfc",
        "command": "vcgencmd measure_temp",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "CPU Temp",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "b07a25f5.7e1228"
            ],
            [],
            []
        ]
    },
    {
        "id": "b07a25f5.7e1228",
        "type": "string",
        "z": "b283f038.b3cfc",
        "name": "Temp Parse",
        "methods": [
            {
                "name": "delLeftMost",
                "params": [
                    {
                        "type": "str",
                        "value": "temp="
                    }
                ]
            },
            {
                "name": "delRightMost",
                "params": [
                    {
                        "type": "str",
                        "value": "'C"
                    }
                ]
            },
            {
                "name": "toFloat",
                "params": [
                    {
                        "type": "num",
                        "value": "1"
                    }
                ]
            }
        ],
        "prop": "payload",
        "propout": "payload",
        "object": "msg",
        "objectout": "msg",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "f81b7091.71cd6"
            ]
        ]
    },
    {
        "id": "f81b7091.71cd6",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "CPU Temp Gauge",
        "group": "2c9b1c26.c94c44",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "CPU Temp",
        "label": "°C",
        "format": "{{value}}",
        "min": "10",
        "max": "85",
        "colors": [
            "#4d36b9",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "60",
        "x": 670,
        "y": 100,
        "wires": []
    },
    {
        "id": "6ad07e45.2f2bf",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "Manage Relay Output",
        "func": "// Turn off and Disable relay if failure counter is high\nif (msg.count >= 10) {\n    flow.set(\"relay-enabled\", false)\n    return { payload:0 };\n}\n// If temperature sensing is valid, re-enable relay, but don't change value\nif (msg.reset) {\n    flow.set(\"relay-enabled\", true)\n    return\n}\n// If the message is from the Propane heater, turn on or off appropriately.\nif (msg.topic == \"propaneHeater\") {\n    if (msg.payload == \"on\" &&\n        flow.get(\"relay-enabled\") &&\n        flow.get(\"relay-enabled-blanking\"))\n    {\n        msg.payload = 1\n        return msg;\n    } else {\n        msg.payload = 0\n        return msg;\n    }\n}\n// Otherwise, do nothing.",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1580,
        "y": 380,
        "wires": [
            [
                "ec60e2a3.d4174",
                "dcb9bec6.fab22",
                "8044db1d.e96d78"
            ]
        ]
    },
    {
        "id": "39b13a2c.0f2ed6",
        "type": "ui_chart",
        "z": "b283f038.b3cfc",
        "name": "Water Temp Chart",
        "group": "b91905fa.f52fe8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Water Temp (8h)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "70",
        "ymax": "106",
        "removeOlder": "8",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2590,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc51f65.7d5ee",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2550,
        "y": 580,
        "wires": []
    },
    {
        "id": "61911f6d.8b877",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "degrees per hour",
        "func": "msg.payload = Math.round(msg.payload*1200)/100\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2330,
        "y": 540,
        "wires": [
            [
                "bc15ee9f.03339",
                "5b5c4f6.b7fb2b",
                "3fc51f65.7d5ee"
            ]
        ]
    },
    {
        "id": "bc15ee9f.03339",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "5m mean heating rate gauge",
        "group": "2c9b1c26.c94c44",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "5m Heating Rate (Mean)",
        "label": "°F/hr",
        "format": "{{value}}",
        "min": "-15",
        "max": "15",
        "colors": [
            "#4d36b9",
            "#ffffff",
            "#ca3838"
        ],
        "seg1": "-3",
        "seg2": "3",
        "x": 2620,
        "y": 500,
        "wires": []
    },
    {
        "id": "5b5c4f6.b7fb2b",
        "type": "ui_chart",
        "z": "b283f038.b3cfc",
        "name": "",
        "group": "b91905fa.f52fe8",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "5m Heating Rate History (Mean)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-4",
        "ymax": "16",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 2630,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "aed2ae8.87e775",
        "type": "combine-statistic",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "waterTemp",
        "operator": "mean",
        "falsy": "include",
        "defer": "0",
        "timeout": "300000",
        "distinction": "_msgid",
        "x": 1450,
        "y": 600,
        "wires": [
            [
                "55215ffb.b925d"
            ]
        ]
    },
    {
        "id": "ad26a8d9.3ef698",
        "type": "combine-delta",
        "z": "b283f038.b3cfc",
        "topic": "waterTempDelta",
        "topicA": "waterTemp",
        "topicB": "waterTempMinus5",
        "name": "",
        "x": 2050,
        "y": 540,
        "wires": [
            [
                "eee476a9.3b5618"
            ]
        ]
    },
    {
        "id": "38642d44.c5d2b2",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "waterTempMinus5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1730,
        "y": 580,
        "wires": [
            [
                "e4d38b64.8e68f8"
            ]
        ]
    },
    {
        "id": "e4d38b64.8e68f8",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1900,
        "y": 520,
        "wires": [
            [
                "ad26a8d9.3ef698"
            ]
        ]
    },
    {
        "id": "55215ffb.b925d",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "",
        "property": "len",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "60",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1580,
        "y": 600,
        "wires": [
            [
                "38642d44.c5d2b2",
                "ad26a8d9.3ef698"
            ]
        ]
    },
    {
        "id": "18680571.196acb",
        "type": "file",
        "z": "b283f038.b3cfc",
        "name": "",
        "filename": "/home/pi/watertemp.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 650,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "dff63973.5ad488",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "date, time, temp, err",
        "func": "//var time = new Date().toLocaleString(\"en-US\", {timeZone: \"America/Los_Angeles\"})\n\n// Parse our locale string to [date, time]\nvar date = new Date().toLocaleString('en-US',{hour12:false,timeZone: \"America/Los_Angeles\"}).split(\" \");\n\n// Now we can access our time at date[1], and monthdayyear @ date[0]\nvar time = date[1];\nvar mdy = date[0];\n\nvar temp = msg.payload;\nvar errorStatus = msg.errorStatus || \"\";\n\nvar newmsg = {payload: (mdy + time + \",\" + temp + \",\" + errorStatus)};\nreturn newmsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 540,
        "wires": [
            [
                "18680571.196acb"
            ]
        ]
    },
    {
        "id": "9a616191.00de5",
        "type": "subflow:898e8f9a.f49db",
        "z": "b283f038.b3cfc",
        "name": "",
        "env": [],
        "x": 660,
        "y": 440,
        "wires": [
            [
                "dff63973.5ad488",
                "330514aa.e68ddc",
                "fc5872e5.4e6cf",
                "891fbdcf.25db7",
                "4c330bf4.2b3cf4",
                "aed2ae8.87e775",
                "4804483fc8c3b376",
                "669656babb38c907"
            ],
            [
                "ef60201d.6366a",
                "8792c750.ed1ba8"
            ]
        ]
    },
    {
        "id": "ef60201d.6366a",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorStatus",
                "pt": "msg",
                "to": "ERR",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "dff63973.5ad488"
            ]
        ]
    },
    {
        "id": "fbd64763.24d848",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1430,
        "y": 200,
        "wires": []
    },
    {
        "id": "c8fe00d3.6bab9",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "9a616191.00de5"
            ]
        ]
    },
    {
        "id": "8791ca4a.a2cee8",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 470,
        "y": 280,
        "wires": [
            [
                "9a616191.00de5"
            ]
        ]
    },
    {
        "id": "6c5afe15.e57fc",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "190",
        "payloadType": "num",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "9a616191.00de5"
            ]
        ]
    },
    {
        "id": "8792c750.ed1ba8",
        "type": "counter",
        "z": "b283f038.b3cfc",
        "name": "Temp Failure Counter",
        "init": "0",
        "step": "1",
        "lower": null,
        "upper": null,
        "mode": "increment",
        "outputs": "1",
        "x": 1200,
        "y": 220,
        "wires": [
            [
                "fbd64763.24d848",
                "89a13ee3.f92f8",
                "6ad07e45.2f2bf"
            ]
        ]
    },
    {
        "id": "f700fb15.0c7248",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "Water Temp Failure Count",
        "group": "2c9b1c26.c94c44",
        "order": 5,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Water Temp Failure Count",
        "label": "°F",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#00d500",
            "#f39400",
            "#ca3838"
        ],
        "seg1": "2",
        "seg2": "3",
        "x": 1730,
        "y": 220,
        "wires": []
    },
    {
        "id": "330514aa.e68ddc",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "8792c750.ed1ba8"
            ]
        ]
    },
    {
        "id": "89a13ee3.f92f8",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "count",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 240,
        "wires": [
            [
                "f700fb15.0c7248"
            ]
        ]
    },
    {
        "id": "f57917e2.592a58",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 300,
        "wires": []
    },
    {
        "id": "ed1fdeca.8f225",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 290,
        "y": 380,
        "wires": []
    },
    {
        "id": "fc5872e5.4e6cf",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": ">1LSB or hold",
        "func": "// Set lastWaterTemp if this is the first pass\nvar lastWaterTemp = flow.get(\"lastWaterTemp\");\nif (!lastWaterTemp) {\n    flow.set(\"lastWaterTemp\", msg.payload)\n    return msg\n}\n\nif (Math.abs(lastWaterTemp - msg.payload) > 0.14){\n    flow.set(\"lastWaterTemp\", msg.payload)\n    return msg\n} else {\n    msg.payload = lastWaterTemp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 560,
        "wires": [
            [
                "4de81ef2.33a3e",
                "39b13a2c.0f2ed6",
                "1433cc39.acc8c4",
                "8df76e74.54b07",
                "60a7152f.263cdc",
                "ade04ba4.cfccb8",
                "59ac43341d1a89b9",
                "8e09479cdefaa57e"
            ]
        ]
    },
    {
        "id": "eee476a9.3b5618",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/Sec",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 2170,
        "y": 540,
        "wires": [
            [
                "61911f6d.8b877"
            ]
        ]
    },
    {
        "id": "ae6ba63c.269c88",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1650,
        "y": 800,
        "wires": []
    },
    {
        "id": "2cafa333.4179cc",
        "type": "ui_gauge",
        "z": "b283f038.b3cfc",
        "name": "5m Linear Regression Heating Rate",
        "group": "2c9b1c26.c94c44",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "5m Linear Regression Heating Rate",
        "label": "°F/hr",
        "format": "{{value}}",
        "min": "-15",
        "max": "15",
        "colors": [
            "#4d36b9",
            "#ffffff",
            "#ca3838"
        ],
        "seg1": "-3",
        "seg2": "3",
        "x": 2640,
        "y": 840,
        "wires": []
    },
    {
        "id": "8004336f.317cd",
        "type": "ui_chart",
        "z": "b283f038.b3cfc",
        "name": "5m Linear Regression Heating Rate",
        "group": "b91905fa.f52fe8",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "5m Linear Regression Heating Rate",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "16",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2640,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "bb74683e.965228",
        "type": "comment",
        "z": "b283f038.b3cfc",
        "name": "5m mean filter 5m delta",
        "info": "5M Mean filter\n",
        "x": 1490,
        "y": 560,
        "wires": []
    },
    {
        "id": "6d131d57.53b824",
        "type": "comment",
        "z": "b283f038.b3cfc",
        "name": "last-to-new value delta",
        "info": "5M Mean filter\n",
        "x": 1500,
        "y": 760,
        "wires": []
    },
    {
        "id": "8df76e74.54b07",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "Delta Since Last",
        "func": "// If the current message value is new and the delta is large enough, save it and emit\n// dVal/dt\n\n// If the calculated heating rate is above this value, suppress output and wait for a new datapoint.\n// Set this to 0 for no filtering.\nvar suppressAboveRate = 16\n\n// Retrieve the last known temperature and its timestamp\nvar lastTemp = flow.get(\"last-temp\")\nvar lastTime = flow.get(\"last-time\")\n//node.warn(\"lastTemp: \" + lastTemp)\n//node.warn(\"lastTime: \" + lastTime)\n\n// Set the current temp and timestamp, and update old values.\nvar thisTemp = msg.payload\nvar thisTime = new Date()\n//node.warn(\"thisTemp: \"+ thisTemp)\n//node.warn(\"thisTime: \"+ thisTime)\n\n// Initial condition: if lastTemp is undefined, set it.\nif (typeof lastTemp == 'undefined'){\n    lastTemp = thisTemp\n    lastTime = thisTime\n    flow.set(\"last-temp\", thisTemp)\n    flow.set(\"last-time\", thisTime)\n}\n\n// ONLY proceed with calc and update stored values IF the current temp is different from the last one.\n// Set number in this line to the deadband width. For instance, >0 means \"measure on any temp difference\"\n// >.28 means \"measure only if the temp has moved two full LSBs or more.\"\n//node.warn(\"thisTemp - lastTemp: \"+ (thisTemp-lastTemp))\n// Also enter if last temp is undefined, to catch the initial case.\nif ((Math.abs(thisTemp - lastTemp) > 0.28)||(lastTemp === undefined)){\n    \n    var timeDeltaSeconds = null\n    try {\n        timeDeltaSeconds = (thisTime.getTime() - lastTime.getTime())/1000\n        tempDelta = thisTemp - lastTemp\n        var degreesPerHour = (tempDelta/timeDeltaSeconds) * 3600\n        // Weird behavior - doing it with .toFixed() seems to produce a string?\n        //degreesPerHour = degreesPerHour.toFixed(2)\n        degreesPerHour = Math.round(degreesPerHour*100)/100\n        //node.warn(\"Degrees per hour: \" + degreesPerHour)\n        \n        // Wait for a new datapoint if the calculated heating rate is suspiciously high.\n        if (degreesPerHour < suppressAboveRate){\n            flow.set(\"last-temp\", thisTemp)\n            flow.set(\"last-time\", thisTime)\n            var newMsg = { payload: degreesPerHour };\n            return newMsg;\n        }\n    } catch (e) {\n        \n    }\n}\n\n\n\n\n\n// Turn off and Disable relay if failure counter is high\n//if (msg.count >= 10) {\n//    flow.set(\"relay-enabled\", false)\n//    return { payload:0 };\n//}\n// If temperature sensing is valid, re-enable relay, but don't change value\n//if (msg.reset) {\n//    flow.set(\"relay-enabled\", true)\n//    return\n//}\n// If the message is from the Propane heater, turn on or off appropriately.\n//if (msg.topic == \"propaneHeater\") {\n//    if (msg.payload.currentHeaterStatus == \"on\" &&\n//        flow.get(\"relay-enabled\"))\n//    {\n//        return { payload:1 };\n//    } else {\n//        return { payload:0 };\n//    }\n//}\n// Otherwise, do nothing.",
        "outputs": 1,
        "timeout": "",
        "noerr": 2,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 800,
        "wires": [
            [
                "ae6ba63c.269c88"
            ]
        ]
    },
    {
        "id": "b80a19c4.f7d988",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "21",
        "payloadType": "num",
        "x": 690,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "cdbf7e24.8b309",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "C to F",
        "func": "tempc = parseFloat(msg.payload);\n//node.warn(tempc)\n//tempc += 1.08\n//node.warn(tempc)\ntempf = tempc*1.8+32;\n// round to xxx.xx\ntempf = Math.round(tempf*100)/100;\nmsg.payload = tempf;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 40,
        "wires": [
            [
                "95da34ee853df77a"
            ]
        ]
    },
    {
        "id": "60a7152f.263cdc",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1350,
        "y": 660,
        "wires": []
    },
    {
        "id": "891fbdcf.25db7",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 440,
        "wires": []
    },
    {
        "id": "4c330bf4.2b3cf4",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "y",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "x",
                "pt": "msg",
                "to": "msg.timestamp/(1000*3600)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 880,
        "wires": [
            [
                "ac9802b9.4c64d",
                "ea4aecce.c4f15"
            ]
        ]
    },
    {
        "id": "ac9802b9.4c64d",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 980,
        "wires": []
    },
    {
        "id": "63f5790a.d2b6a8",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "3DAFCE56230B",
                "fromt": "str",
                "to": "SolarTemp",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "FF0B43001601",
                "fromt": "str",
                "to": "TubTemp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 40,
        "wires": [
            [
                "cdbf7e24.8b309"
            ]
        ]
    },
    {
        "id": "8f9aec19.7822b",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "function.equation.0",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 880,
        "wires": []
    },
    {
        "id": "ea4aecce.c4f15",
        "type": "regression",
        "z": "b283f038.b3cfc",
        "name": "",
        "dataSetSize": "120",
        "regressionType": "linear",
        "polynomialOrder": 2,
        "precision": 2,
        "xInputField": "x",
        "xInputFieldType": "msg",
        "yInputField": "y",
        "yInputFieldType": "msg",
        "yOutputField": "outputy",
        "yOutputFieldType": "msg",
        "functionOutputField": "function",
        "functionOutputFieldType": "msg",
        "resultOnly": false,
        "x": 1690,
        "y": 880,
        "wires": [
            [
                "8f9aec19.7822b",
                "88131a95.aebcb8"
            ]
        ]
    },
    {
        "id": "88131a95.aebcb8",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "function.equation.0",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 800,
        "wires": [
            [
                "8004336f.317cd",
                "2cafa333.4179cc",
                "60f2ac4b.47c6c4"
            ]
        ]
    },
    {
        "id": "60f2ac4b.47c6c4",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 840,
        "wires": []
    },
    {
        "id": "af64af8f.3ea97",
        "type": "ui_heater_controller",
        "z": "b283f038.b3cfc",
        "name": "heater",
        "group": "b91905fa.f52fe8",
        "unit": "F",
        "displayMode": "slider",
        "order": 2,
        "width": "10",
        "height": "4",
        "topic": "propaneHeater",
        "title": "Heater",
        "logLength": 0,
        "sliderMinValue": 10,
        "sliderMaxValue": 104,
        "sliderStep": 0.5,
        "threshold": 0.5,
        "calendar": "{\n    \"Monday\": {\n        \"00:00\": 10\n    },\n    \"Tuesday\": {\n        \"00:00\": 10\n    },\n    \"Wednesday\": {\n        \"00:00\": 10\n    },\n    \"Thursday\": {\n        \"00:00\": 10\n    },\n    \"Friday\": {\n        \"00:00\": 10\n    },\n    \"Saturday\": {\n        \"00:00\": 10,\n        \"07:00\": 11,\n        \"10:00\": 10\n    },\n    \"Sunday\": {\n        \"00:00\": 10\n    }\n}",
        "x": 1270,
        "y": 380,
        "wires": [
            [
                "f57917e2.592a58",
                "6ad07e45.2f2bf"
            ],
            []
        ],
        "inputLabels": [
            "currentTemp | userConfig | setCalendar | config | status"
        ],
        "outputLabels": [
            "Heater status",
            "Info"
        ],
        "info": "Description"
    },
    {
        "id": "ec60e2a3.d4174",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1790,
        "y": 260,
        "wires": []
    },
    {
        "id": "dcb9bec6.fab22",
        "type": "rpi-gpio out",
        "z": "b283f038.b3cfc",
        "name": "Heat Relay",
        "pin": "23",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1850,
        "y": 340,
        "wires": []
    },
    {
        "id": "7045e78a.90c438",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 320,
        "wires": []
    },
    {
        "id": "9e946746.ac7c08",
        "type": "trigger",
        "z": "b283f038.b3cfc",
        "name": "",
        "op1": "false",
        "op2": "true",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "6",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1110,
        "y": 140,
        "wires": [
            [
                "cb83e1a8.de00e"
            ]
        ]
    },
    {
        "id": "cb83e1a8.de00e",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "relay-enabled-blanking",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "relay-enabled-blanking",
                "pt": "msg",
                "to": "relay-enabled-blanking",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 140,
        "wires": [
            [
                "6cdd58c6.d9a918"
            ]
        ]
    },
    {
        "id": "3ddfadd1.a1f332",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "10min",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "10minblanking",
        "x": 960,
        "y": 140,
        "wires": [
            [
                "9e946746.ac7c08"
            ]
        ]
    },
    {
        "id": "6cdd58c6.d9a918",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1590,
        "y": 140,
        "wires": []
    },
    {
        "id": "719c8825.55f7f8",
        "type": "comment",
        "z": "b283f038.b3cfc",
        "name": "",
        "info": "This line inhibits the relay output for 6s every 10 minutes to defeat the heater's built-in maximum on time.",
        "x": 940,
        "y": 100,
        "wires": []
    },
    {
        "id": "9e244ac6.ea3318",
        "type": "rpi-gpio out",
        "z": "b283f038.b3cfc",
        "name": "Filter Relay",
        "pin": "22",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 2610,
        "y": 440,
        "wires": []
    },
    {
        "id": "8044db1d.e96d78",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "Enable between 7am to 9am",
        "func": "// If upstream (the heater) says turn on, then turn on.\n\nif (msg.payload == 1) {\n    return msg\n} else {\n    // Heater doesn't want us on, but check the time of day to see if we should override\n    // Get current time\n    var d=new Date();\n    var hour = d.getHours();\n    if (hour>=7 && hour <9){\n        //return { payload:0 }; // Uncomment to let the scheduled cleaning happen\n        return { payload:1 };\n    } else {\n        return { payload:0 }\n    }\n}\n\n\n\n\n\n\n\n// if (msg.count >= 10) {\n//     flow.set(\"relay-enabled\", false)\n//     return { payload:0 };\n// }\n// // If temperature sensing is valid, re-enable relay, but don't change value\n// if (msg.reset) {\n//     flow.set(\"relay-enabled\", true)\n//     return\n// }\n// // If the message is from the Propane heater, turn on or off appropriately.\n// if (msg.topic == \"propaneHeater\") {\n//     if (msg.payload == \"on\" &&\n//         flow.get(\"relay-enabled\") &&\n//         flow.get(\"relay-enabled-blanking\"))\n//     {\n//         return { payload:1 };\n//     } else {\n//         return { payload:0 };\n//     }\n// }\n// Otherwise, do nothing.",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1920,
        "y": 440,
        "wires": [
            [
                "c78ecb7d.16d0a8",
                "c70fdbc4.aa8e18"
            ]
        ]
    },
    {
        "id": "259539f3.543406",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2510,
        "y": 300,
        "wires": []
    },
    {
        "id": "c1f73c47.750f2",
        "type": "ui_switch",
        "z": "b283f038.b3cfc",
        "name": "Filter Pump Switch",
        "label": "Filter Pump",
        "tooltip": "",
        "group": "b91905fa.f52fe8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2390,
        "y": 440,
        "wires": [
            [
                "9e244ac6.ea3318",
                "259539f3.543406"
            ]
        ]
    },
    {
        "id": "c78ecb7d.16d0a8",
        "type": "rbe",
        "z": "b283f038.b3cfc",
        "name": "On Change",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2170,
        "y": 440,
        "wires": [
            [
                "c1f73c47.750f2"
            ]
        ]
    },
    {
        "id": "c70fdbc4.aa8e18",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Forward if 1",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2170,
        "y": 480,
        "wires": [
            [
                "c1f73c47.750f2"
            ]
        ]
    },
    {
        "id": "92e430fd.53c68",
        "type": "comment",
        "z": "b283f038.b3cfc",
        "name": "Command off only on state change, but on always if needed",
        "info": "Command the pump switch off ONLY on a state change, but command it on always so the user can't do a dumb and turn it off while the heater is running (for more than 5s)",
        "x": 2160,
        "y": 400,
        "wires": []
    },
    {
        "id": "90d698ac6cf527ed",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "hottub/temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5d9ecdcdae1f3406",
        "x": 1470,
        "y": 500,
        "wires": []
    },
    {
        "id": "95da34ee853df77a",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "",
        "property": "dir",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "w1_bus_master1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "w1_bus_master2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 40,
        "wires": [
            [
                "9a616191.00de5"
            ],
            [
                "25366bdf9228468b",
                "39b13a2c.0f2ed6",
                "e3dc1971d7fd5de3",
                "1d6459adfd551ed7",
                "4804483fc8c3b376"
            ]
        ]
    },
    {
        "id": "25366bdf9228468b",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/20s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 630,
        "y": 40,
        "wires": [
            [
                "a1de56d201df5d1c"
            ]
        ]
    },
    {
        "id": "a1de56d201df5d1c",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "hottub/solar-temperature",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5d9ecdcdae1f3406",
        "x": 850,
        "y": 40,
        "wires": []
    },
    {
        "id": "a1fd6681fd0025d0",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 300,
        "wires": [
            [
                "63f5790a.d2b6a8"
            ],
            []
        ]
    },
    {
        "id": "06a061e906895715",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 240,
        "wires": []
    },
    {
        "id": "9408b0228e222cd6",
        "type": "ui_switch",
        "z": "b283f038.b3cfc",
        "name": "Solar Heating Switch",
        "label": "Solar Heating",
        "tooltip": "",
        "group": "b91905fa.f52fe8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "SolarSwitch",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1940,
        "y": 60,
        "wires": [
            [
                "91b7e87dfb8b568b"
            ]
        ]
    },
    {
        "id": "d27c6a22d0ff1a02",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 20,
        "wires": []
    },
    {
        "id": "1d6459adfd551ed7",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "Sub 10",
        "func": "msg.payload = msg.payload-10\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4804483fc8c3b376",
        "type": "combine-delta",
        "z": "b283f038.b3cfc",
        "topic": "",
        "topicA": "SolarTemp",
        "topicB": "TubTemp",
        "name": "Solar Excess Temp",
        "x": 1330,
        "y": 20,
        "wires": [
            [
                "2a339a5adbe4bc58",
                "04b9183b020e6928"
            ]
        ]
    },
    {
        "id": "e3dc1971d7fd5de3",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 630,
        "y": 160,
        "wires": []
    },
    {
        "id": "e04c1af44688a55c",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2150,
        "y": 120,
        "wires": []
    },
    {
        "id": "2a339a5adbe4bc58",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1530,
        "y": 60,
        "wires": []
    },
    {
        "id": "04b9183b020e6928",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "PositiveSolar?",
        "func": "// Send a 1 (start condition) if the excess temp is over 10F\n// Send a 0 (stop condition) if the excess temp is under 1F\n// Otherwise, do nothing, which is fine because we want to either stay on or stay off.\nif (msg.payload>10){\n    return { payload:1, topic:\"SolarPositive\" }\n} else if (msg.payload<1) {\n    return { payload:0, topic:\"SolarPositive\" }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 20,
        "wires": [
            [
                "2ea59c6291bd111c"
            ]
        ]
    },
    {
        "id": "2ea59c6291bd111c",
        "type": "delay",
        "z": "b283f038.b3cfc",
        "name": "1/s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1750,
        "y": 20,
        "wires": [
            [
                "d27c6a22d0ff1a02",
                "91b7e87dfb8b568b"
            ]
        ]
    },
    {
        "id": "2aa8ac72461dc409",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1750,
        "y": 100,
        "wires": [
            [
                "9408b0228e222cd6"
            ]
        ]
    },
    {
        "id": "ea08af37afa8d5b0",
        "type": "inject",
        "z": "b283f038.b3cfc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1750,
        "y": 60,
        "wires": [
            [
                "9408b0228e222cd6"
            ]
        ]
    },
    {
        "id": "91b7e87dfb8b568b",
        "type": "combine-logic",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "",
        "operator": "and",
        "defer": 250,
        "timeout": 0,
        "distinction": "topic",
        "x": 1980,
        "y": 120,
        "wires": [
            [
                "e04c1af44688a55c",
                "4770b1eb06b22549"
            ]
        ]
    },
    {
        "id": "4770b1eb06b22549",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 200,
        "wires": [
            [
                "01e6f06aac2ec83e",
                "49b5e9d63e529424"
            ]
        ]
    },
    {
        "id": "01e6f06aac2ec83e",
        "type": "rbe",
        "z": "b283f038.b3cfc",
        "name": "On Change",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 2170,
        "y": 320,
        "wires": [
            [
                "c1f73c47.750f2"
            ]
        ]
    },
    {
        "id": "49b5e9d63e529424",
        "type": "switch",
        "z": "b283f038.b3cfc",
        "name": "Forward if 1",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2170,
        "y": 360,
        "wires": [
            [
                "c1f73c47.750f2"
            ]
        ]
    },
    {
        "id": "6ee6aa1da660984f",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2350,
        "y": 280,
        "wires": []
    },
    {
        "id": "f20008e0eee96751",
        "type": "rate",
        "z": "b283f038.b3cfc",
        "name": "",
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "rate",
        "outputFieldType": "msg",
        "timestampField": "timestamp",
        "timestampFieldType": "msg",
        "ratePeriod": "3600000",
        "x": 1810,
        "y": 720,
        "wires": [
            [
                "3cdf22d0d115b16e",
                "5fa288e35276ef24"
            ]
        ]
    },
    {
        "id": "3cdf22d0d115b16e",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1950,
        "y": 680,
        "wires": []
    },
    {
        "id": "59ac43341d1a89b9",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1210,
        "y": 520,
        "wires": []
    },
    {
        "id": "8e09479cdefaa57e",
        "type": "rbe",
        "z": "b283f038.b3cfc",
        "name": "change only",
        "func": "deadbandEq",
        "gap": "0.20",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1670,
        "y": 720,
        "wires": [
            [
                "f20008e0eee96751"
            ]
        ]
    },
    {
        "id": "40fb7d47615df6f4",
        "type": "ui_chart",
        "z": "b283f038.b3cfc",
        "name": "0.33 degree delta rate",
        "group": "b91905fa.f52fe8",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "0.2 deg rate",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "16",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2600,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "5fa288e35276ef24",
        "type": "change",
        "z": "b283f038.b3cfc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "rate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 720,
        "wires": [
            [
                "40fb7d47615df6f4"
            ]
        ]
    },
    {
        "id": "669656babb38c907",
        "type": "combine-bangbang",
        "z": "b283f038.b3cfc",
        "upper": "104.5",
        "lower": "104.3",
        "invert": true,
        "name": "No solar over 104.5",
        "x": 1510,
        "y": 100,
        "wires": [
            [
                "91b7e87dfb8b568b",
                "a0175286f6d8d826"
            ]
        ]
    },
    {
        "id": "a0175286f6d8d826",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1750,
        "y": 160,
        "wires": []
    },
    {
        "id": "b4761a8dd5b19f8b",
        "type": "ads1x15_i2c",
        "z": "b283f038.b3cfc",
        "property": "payload",
        "name": "ORP",
        "i2c_device_number": 1,
        "chip": "0x01",
        "i2c_address": "0x48",
        "inputsForChannel": "differential",
        "singleEndedChannel0": true,
        "singleEndedChannel1": true,
        "singleEndedChannel2": true,
        "singleEndedChannel3": true,
        "differentialChannel0_1": true,
        "differentialChannel0_3": false,
        "differentialChannel1_3": false,
        "differentialChannel2_3": false,
        "samplesPerSecond0": "920",
        "samplesPerSecond1": "860",
        "progGainAmp": "6144",
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "c5d943346bc28716",
                "5abdba2ef94090f8"
            ]
        ]
    },
    {
        "id": "c5d943346bc28716",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].differential.channel_0_1.miliVolts",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1220,
        "wires": []
    },
    {
        "id": "11abef61b14b587d",
        "type": "mqtt out",
        "z": "b283f038.b3cfc",
        "name": "",
        "topic": "hottub/orp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5d9ecdcdae1f3406",
        "x": 720,
        "y": 1280,
        "wires": []
    },
    {
        "id": "403328e282b91baa",
        "type": "debug",
        "z": "b283f038.b3cfc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 730,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5abdba2ef94090f8",
        "type": "function",
        "z": "b283f038.b3cfc",
        "name": "Get mV",
        "func": "msg.payload = msg.payload[\"/dev/i2c-1\"].ads1115[\"0x48\"].differential.channel_0_1.miliVolts;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1360,
        "wires": [
            [
                "403328e282b91baa"
            ]
        ]
    }
]